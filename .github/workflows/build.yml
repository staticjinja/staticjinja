# This workflow will install Python dependencies, run tests and lint with a variety of Python versions and OSs
# For more information see:
# https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners
name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * 0" # weekly, to catch exterior dependencies changing

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/setup
        with:
          python-version: ${{ matrix.python-version}}
      - name: Run tests in tox with Python ${{ matrix.python-version}}
        run: poetry run tox -e py
      # Upload pytest's scratch space, which was set to .pytest/ in setup.cfg
      # Useful for debugging.
      - name: Upload pytest tmpdir
        uses: actions/upload-artifact@v2
        if: failure() # Only upload on failure of previous step.
        with:
          name: pytest-tmpdir ${{ matrix.python-version }} ${{ matrix.os }}
          path: .pytest/
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/setup
      - name: Check that we conform to black
        run: make black-check
  flake8:
    # Only run the linter on a single python version on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/setup
      - name: Run flake8
        run: make flake8
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/setup
      - name: Build docs
        run: make docs
  coverage:
    # Only run test coverage on a single python version on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/setup
      - name: Measure test coverage and upload results
        run: make coverage-upload
